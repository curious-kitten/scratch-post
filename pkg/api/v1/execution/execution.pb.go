// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: execution.proto

package execution

import (
	reflect "reflect"
	sync "sync"

	metadata "github.com/curious-kitten/scratch-post/pkg/api/v1/metadata"
	scenario "github.com/curious-kitten/scratch-post/pkg/api/v1/scenario"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Status of an execution
type Status int32

const (
	// an execution that has not been completed
	Status_Pending Status = 0
	// an execution result did not match the expected
	Status_Fail Status = 1
	// an execution result matches the expected
	Status_Pass Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Pending",
		1: "Fail",
		2: "Pass",
	}
	Status_value = map[string]int32{
		"Pending": 0,
		"Fail":    1,
		"Pass":    2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_execution_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_execution_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{0}
}

// Represents a step that has to be completed in order to complete the test
type StepExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Definition of the step to be executed
	Definition *scenario.Step `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	// Status of the execution. Defaults to Pending
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=metadata.scratchpost.curiouskitten.Status" json:"status,omitempty"`
	// Details about the exectuion results
	ActualResult string `protobuf:"bytes,3,opt,name=ActualResult,proto3" json:"ActualResult,omitempty"`
	// Issues associated with the step execution
	Issues []*metadata.LinkedIssue `protobuf:"bytes,10,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *StepExecution) Reset() {
	*x = StepExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_execution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepExecution) ProtoMessage() {}

func (x *StepExecution) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepExecution.ProtoReflect.Descriptor instead.
func (*StepExecution) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{0}
}

func (x *StepExecution) GetDefinition() *scenario.Step {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *StepExecution) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Pending
}

func (x *StepExecution) GetActualResult() string {
	if x != nil {
		return x.ActualResult
	}
	return ""
}

func (x *StepExecution) GetIssues() []*metadata.LinkedIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

//
//Represents an execution of a scenario. It associates with a Scenario through the `scenarioId`.
//It needs an association with a project and a test plan. This is done through the `projectId` and `testPlanId`
//In order to create a new execution, you need to pass in the provide the `projectId`, the `testPlanId` and the `scenarioId`
type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identification for the execution
	Identity *metadata.Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// ID of the associated project
	ProjectId string `protobuf:"bytes,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	// ID of the scenario this execution is part of
	ScenarioId string `protobuf:"bytes,3,opt,name=scenarioId,proto3" json:"scenarioId,omitempty"`
	// The test plan this execution is part of
	TestPlanId string `protobuf:"bytes,4,opt,name=testPlanId,proto3" json:"testPlanId,omitempty"`
	// Status of the execution, defaults to PENDING
	Status Status `protobuf:"varint,5,opt,name=status,proto3,enum=metadata.scratchpost.curiouskitten.Status" json:"status,omitempty"`
	// Name of the associated scenario
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the associated scenario
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Prerequisites of the associated scenario
	Prerequisites string `protobuf:"bytes,8,opt,name=prerequisites,proto3" json:"prerequisites,omitempty"`
	// Steps in the associated scenario with aditional execution information
	Steps  []*StepExecution        `protobuf:"bytes,9,rep,name=steps,proto3" json:"steps,omitempty"`
	Issues []*metadata.LinkedIssue `protobuf:"bytes,10,rep,name=issues,proto3" json:"issues,omitempty"`
	// Labels are used to help connect different items toghether
	Labels []string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_execution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{1}
}

func (x *Execution) GetIdentity() *metadata.Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *Execution) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Execution) GetScenarioId() string {
	if x != nil {
		return x.ScenarioId
	}
	return ""
}

func (x *Execution) GetTestPlanId() string {
	if x != nil {
		return x.TestPlanId
	}
	return ""
}

func (x *Execution) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Pending
}

func (x *Execution) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Execution) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Execution) GetPrerequisites() string {
	if x != nil {
		return x.Prerequisites
	}
	return ""
}

func (x *Execution) GetSteps() []*StepExecution {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Execution) GetIssues() []*metadata.LinkedIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *Execution) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_execution_proto protoreflect.FileDescriptor

var file_execution_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x22, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x63, 0x72, 0x61,
	0x74, 0x63, 0x68, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x6e, 0x1a, 0x17, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x65, 0x70,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x6e, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x73,
	0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f,
	0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x22, 0xfd, 0x03, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69,
	0x6f, 0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e, 0x53,
	0x74, 0x65, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x12, 0x47, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x73,
	0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x6f,
	0x75, 0x73, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x2a, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x61, 0x69, 0x6c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x10, 0x02, 0x42,
	0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x75,
	0x72, 0x69, 0x6f, 0x75, 0x73, 0x2d, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x72,
	0x61, 0x74, 0x63, 0x68, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_execution_proto_rawDescOnce sync.Once
	file_execution_proto_rawDescData = file_execution_proto_rawDesc
)

func file_execution_proto_rawDescGZIP() []byte {
	file_execution_proto_rawDescOnce.Do(func() {
		file_execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_execution_proto_rawDescData)
	})
	return file_execution_proto_rawDescData
}

var file_execution_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_execution_proto_goTypes = []interface{}{
	(Status)(0),                  // 0: metadata.scratchpost.curiouskitten.Status
	(*StepExecution)(nil),        // 1: metadata.scratchpost.curiouskitten.StepExecution
	(*Execution)(nil),            // 2: metadata.scratchpost.curiouskitten.Execution
	(*scenario.Step)(nil),        // 3: scenario.scratchpost.curiouskitten.Step
	(*metadata.LinkedIssue)(nil), // 4: metadata.scratchpost.curiouskitten.LinkedIssue
	(*metadata.Identity)(nil),    // 5: metadata.scratchpost.curiouskitten.Identity
}
var file_execution_proto_depIdxs = []int32{
	3, // 0: metadata.scratchpost.curiouskitten.StepExecution.definition:type_name -> scenario.scratchpost.curiouskitten.Step
	0, // 1: metadata.scratchpost.curiouskitten.StepExecution.status:type_name -> metadata.scratchpost.curiouskitten.Status
	4, // 2: metadata.scratchpost.curiouskitten.StepExecution.issues:type_name -> metadata.scratchpost.curiouskitten.LinkedIssue
	5, // 3: metadata.scratchpost.curiouskitten.Execution.identity:type_name -> metadata.scratchpost.curiouskitten.Identity
	0, // 4: metadata.scratchpost.curiouskitten.Execution.status:type_name -> metadata.scratchpost.curiouskitten.Status
	1, // 5: metadata.scratchpost.curiouskitten.Execution.steps:type_name -> metadata.scratchpost.curiouskitten.StepExecution
	4, // 6: metadata.scratchpost.curiouskitten.Execution.issues:type_name -> metadata.scratchpost.curiouskitten.LinkedIssue
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_execution_proto_init() }
func file_execution_proto_init() {
	if File_execution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_execution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_execution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_execution_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_execution_proto_goTypes,
		DependencyIndexes: file_execution_proto_depIdxs,
		EnumInfos:         file_execution_proto_enumTypes,
		MessageInfos:      file_execution_proto_msgTypes,
	}.Build()
	File_execution_proto = out.File
	file_execution_proto_rawDesc = nil
	file_execution_proto_goTypes = nil
	file_execution_proto_depIdxs = nil
}
